# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install pipenv
        uses: dschep/install-pipenv-action@v1
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.pipenv
          key: ${{ runner.os }}-pipenv-v2-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install Dependencies
        env:
          PIPENV_NOSPIN: "true"
          WORKON_HOME: ~/.pipenv/virtualenvs
          PIPENV_CACHE_DIR: ~/.pipenv/pipcache
        run: pipenv install --dev
        if: steps.pipenv-cache.outputs.cache-hit != 'true'
      - name: Lint with flake8
        env:
          WORKON_HOME: ~/.pipenv/virtualenvs
        run: |
          # stop the build if there are Python syntax errors or undefined names
          pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # enforce naming conventions
          pipenv run flake8 logiclearning --count --select=N801,N802,N803,N804,N805,N806,N807,N811,N812,N813,N814,N815,N816,N817 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Black Code Formatter
        env:
          WORKON_HOME: ~/.pipenv/virtualenvs
        run: |
          pipenv run black --check .
      - name: Test with pytest
        env:
          WORKON_HOME: ~/.pipenv/virtualenvs
        run: |
          pipenv run pytest
